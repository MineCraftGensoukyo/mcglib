buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_plugin_version"
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: "kotlin"
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'

version = mod_version
group = "moe.gensoukyo.lib" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "MCGLib"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

compileKotlin {
    // 修复 Kotlin 使用 MethodHandle 不响应多态签名的 bug
    kotlinOptions.freeCompilerArgs = ["-Xpolymorphic-signature"]
}

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    flatDir {
        dir 'lib'
    }
    maven {
        url = "https://hub.spigotmc.org/nexus/content/repositories/public/"
    }
    maven {
        url "https://maven.shadowfacts.net/"
    }
    mavenCentral()
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'

    compile group: "noppes.npcs", name:"CustomNPCs_1.12.2", version: "(05Jul20)-deobf"

    runtimeOnly group: "net.shadowfacts", name: "Forgelin", version: "1.8.3"
    // 插件
    compile "org.bukkit:bukkit:1.12.2-R0.1-SNAPSHOT"
    // compile "org.serverct.ersha.jd:AttributePlus:2.2.9.2"

    // JUnit
    testImplementation(platform('org.junit:junit-bom:5.8.2'))
    testImplementation('org.junit.jupiter:junit-jupiter:5.8.2')

    implementation group: "org.jetbrains.kotlin", name: "kotlin-stdlib", version: kotlin_version
    implementation group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk7", version: kotlin_version
    implementation group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8", version: kotlin_version
    implementation group: "org.jetbrains.kotlin", name: "kotlin-reflect", version: kotlin_version
    compile group: "org.jetbrains.kotlinx", name: "kotlinx-coroutines-core", version: coroutines_version
    compile group: "org.jetbrains.kotlinx", name: "kotlinx-coroutines-jdk8", version: coroutines_version
    testImplementation "org.jetbrains.kotlin:kotlin-script-runtime:1.3.40"
}

processResources {
    def mcversion = "1.12.2"
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", mcversion

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': mcversion
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = "utf8"
}

jar {
    manifest {
        attributes([
                "Specification-Title": "mcglib",
                "Specification-Vendor": "Minecraft Gensokyo",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"Minecraft Gensokyo",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
