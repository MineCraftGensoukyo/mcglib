buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_plugin_version"
    }
}
apply plugin: "kotlin"
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = mod_version
group = "moe.gensoukyo.lib" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "MCGLib"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"

    replaceIn "MCGLib.java"
    replace "@VERSION@", mod_version
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_39"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

repositories {
    flatDir {
        dir 'lib'
    }
    maven {
        url = "http://maven.ljxmc.top/repository/handy-minecraft/"
    }
    maven {
        url = "https://hub.spigotmc.org/nexus/content/repositories/public/"
    }
    maven {
        url "http://maven.shadowfacts.net/"
    }
}

dependencies {
    compile group: "noppes.npcs", name:"CustomNPCs_1.12.2", version: "(05Jul20)-deobf"

    runtimeOnly group: "net.shadowfacts", name: "Forgelin", version: "1.8.3"
    compile "yay.louder:kotlinpool:1.1.3"
    // 插件
    compile "org.bukkit:bukkit:1.12.2-R0.1-SNAPSHOT"
    compile "org.serverct.ersha.jd:AttributePlus:2.2.9.2"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    implementation group: "org.jetbrains.kotlin", name: "kotlin-stdlib", version: kotlin_version
    implementation group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk7", version: kotlin_version
    implementation group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8", version: kotlin_version
    implementation group: "org.jetbrains.kotlin", name: "kotlin-reflect", version: kotlin_version
    testImplementation "org.jetbrains.kotlin:kotlin-script-runtime:1.3.40"
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = "utf8"
}

compileKotlin {
    // 修复 Kotlin 使用 MethodHandle 不响应多态签名的 bug
    kotlinOptions.freeCompilerArgs = ["-Xpolymorphic-signature"]
}